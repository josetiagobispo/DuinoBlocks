from pyjamas import DOM
from pyjamas.ui.Widget import Widget
from edu.uca.renderable.NumberArgument import NumberArgument
from pyjamas.Window import alert, getDocumentRoot
from pyjamas.ui.ClickListener import ClickHandler
from pyjamas.ui.MouseListener import MouseHandler
from edu.uca.renderable.Element import Element
from pyjamas.ui.ListBox import ListBox
from __pyjamas__ import wnd, get_main_frame, doc
from pyjamas.ui import Event, MenuItem, MenuBar
from pyjamas.ui.RootPanel import RootPanel

class DropdownMenu(NumberArgument, MouseHandler, ClickHandler):
    
    def __init__(self):
        NumberArgument.__init__(self)
        ClickHandler.__init__(self)
        MouseHandler.__init__(self)
        self.draw2() 
        RootPanel().addMouseListener(self) 
    
    def drawValues(self):
        self.values = ('A0', 'A1', 'A2', 'A3', 'A4', 'A5')
        for value in self.values:
            iten = DropdownMenuListener()
            iten.addStyleName('dropdownItem')
            iten.setStyleAttribute('float', 'left')
            DOM.setInnerText(iten.getElement(), value)
            iten.addClickListener(self)
            self.dropdown.append(iten)
    
    def draw2(self):        
        self.dropdown = Element(Element=DOM.createDiv())
        self.dropdown.addStyleName('dropdown')
        self.drawValues()
        self.btn = DropdownMenuListener()
        self.btn.addStyleName('dropdown_btn')
        self.btn.append(self.dropdown)
        self.btn.addMouseListener(self)        
        self.append(self.btn)
        
    def onMouseDown(self, sender, x, y):
        #alert(doc().getElementById('teste')) #funcionou
        if sender == RootPanel():
            self.dropdown.setStyleAttribute('display', 'none')
            alert('RootPanel')
        elif sender == self.btn:
            self.dropdown.setStyleAttribute('display', 'block')
            alert('btn')
                  
        #self.btn.removeMouseListener(self)
        
        #$(".dropdown").css("display", "none"); fecha todos dropdown
        #var c = $(this).children(".dropdown"); abre este dropdown
        #c.css({display: "block"});
        #c.css({top: "-6px"});
        #$(window).mousedown(function() {
        #    $(".dropdown").css("display", 
        #    "none")
        #});
        #return false
    

        #self.btn.addMouseListener(self)

        #var c = $(this).closest(".dropdown_btn").attr("blockObject");
        #c.container.setValue($(this).html());
        #$(this).closest(".dropdown").css("display", "none");
        #c.container.resize()          
          
class DropdownMenuListener(Element, MouseHandler, ClickHandler):
    def __init__(self):
        Element.__init__(self, Element=DOM.createDiv())
        ClickHandler.__init__(self)
        MouseHandler.__init__(self)
        self.addMouseListener(self) 
        
    def onClick(self, sender):
        if sender == self.dropdown:
            self.dropdown.setStyleAttribute('display', 'none')
            alert('dropdown')
    